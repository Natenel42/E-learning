{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/hp/Documents/ALX/E-learning/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AssessmentsComponent = class AssessmentsComponent {\n  constructor(afs, appService, toastr) {\n    this.afs = afs;\n    this.appService = appService;\n    this.toastr = toastr;\n    this.allStudents = [];\n    this.course = 'abs';\n    this.busy = false;\n  }\n  ngOnInit() {\n    this.course = this.appService.currentUser.course;\n    this.loadStudents();\n  }\n  loadStudents() {\n    this.afs.collection('Students').get().subscribe(r => {\n      this.allStudents = [];\n      for (const student of r.docs) {\n        const studentData = student.data();\n        studentData.id = student.id;\n        if (!studentData.courses) studentData.courses = {};\n        if (!studentData.courses[this.course]) studentData.courses[this.course] = {\n          exam: 0,\n          quiz: 0,\n          assignment: 0\n        };\n        this.allStudents.push(studentData);\n      }\n    });\n  }\n  saveAssessment() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const batch = _this.afs.firestore.batch();\n      for (const student of _this.allStudents) {\n        const update = {};\n        update[`courses.${_this.course}`] = {\n          exam: student.courses[_this.course].exam,\n          quiz: student.courses[_this.course].quiz,\n          assignment: student.courses[_this.course].assignment\n        };\n        batch.update(_this.afs.doc(`Students/${student.id}`).ref, update);\n      }\n      yield batch.commit();\n      _this.toastr.success('Assessment saved');\n    })();\n  }\n};\nAssessmentsComponent = __decorate([Component({\n  selector: 'app-assessments',\n  templateUrl: './assessments.component.html',\n  styleUrls: ['./assessments.component.scss']\n})], AssessmentsComponent);\nexport { AssessmentsComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAI/BC,YACUC,GAAqB,EACrBC,UAAsB,EACtBC,MAAqB;IAFrB,QAAG,GAAHF,GAAG;IACH,eAAU,GAAVC,UAAU;IACV,WAAM,GAANC,MAAM;IANhB,gBAAW,GAAU,EAAE;IACvB,WAAM,GAAW,KAAK;IACtB,SAAI,GAAG,KAAK;EAKT;EAEHC,QAAQ;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACH,UAAU,CAACI,WAAW,CAACD,MAAM;IAChD,IAAI,CAACE,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,IAAI,CAACN,GAAG,CACLO,UAAU,CAAC,UAAU,CAAC,CACtBC,GAAG,EAAE,CACLC,SAAS,CAAEC,CAAC,IAAI;MACf,IAAI,CAACC,WAAW,GAAG,EAAE;MACrB,KAAK,MAAMC,OAAO,IAAIF,CAAC,CAACG,IAAI,EAAE;QAC5B,MAAMC,WAAW,GAAQF,OAAO,CAACG,IAAI,EAAE;QACvCD,WAAW,CAACE,EAAE,GAAGJ,OAAO,CAACI,EAAE;QAE3B,IAAI,CAACF,WAAW,CAACG,OAAO,EAAEH,WAAW,CAACG,OAAO,GAAG,EAAE;QAClD,IAAI,CAACH,WAAW,CAACG,OAAO,CAAC,IAAI,CAACb,MAAM,CAAC,EACnCU,WAAW,CAACG,OAAO,CAAC,IAAI,CAACb,MAAM,CAAC,GAAG;UACjCc,IAAI,EAAE,CAAC;UACPC,IAAI,EAAE,CAAC;UACPC,UAAU,EAAE;SACb;QACH,IAAI,CAACT,WAAW,CAACU,IAAI,CAACP,WAAW,CAAC;;IAEtC,CAAC,CAAC;EACN;EAEMQ,cAAc;IAAA;IAAA;MAClB,MAAMC,KAAK,GAAG,KAAI,CAACvB,GAAG,CAACwB,SAAS,CAACD,KAAK,EAAE;MACxC,KAAK,MAAMX,OAAO,IAAI,KAAI,CAACD,WAAW,EAAE;QACtC,MAAMc,MAAM,GAAQ,EAAE;QACtBA,MAAM,CAAC,WAAW,KAAI,CAACrB,MAAM,EAAE,CAAC,GAAG;UACjCc,IAAI,EAAEN,OAAO,CAACK,OAAO,CAAC,KAAI,CAACb,MAAM,CAAC,CAACc,IAAI;UACvCC,IAAI,EAAEP,OAAO,CAACK,OAAO,CAAC,KAAI,CAACb,MAAM,CAAC,CAACe,IAAI;UACvCC,UAAU,EAAER,OAAO,CAACK,OAAO,CAAC,KAAI,CAACb,MAAM,CAAC,CAACgB;SAC1C;QACDG,KAAK,CAACE,MAAM,CAAC,KAAI,CAACzB,GAAG,CAAC0B,GAAG,CAAC,YAAYd,OAAO,CAACI,EAAE,EAAE,CAAC,CAACW,GAAG,EAAEF,MAAM,CAAC;;MAGlE,MAAMF,KAAK,CAACK,MAAM,EAAE;MACpB,KAAI,CAAC1B,MAAM,CAAC2B,OAAO,CAAC,kBAAkB,CAAC;IAAC;EAC1C;CACD;AApDY/B,oBAAoB,eALhCD,SAAS,CAAC;EACTiC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWlC,oBAAoB,CAoDhC;SApDYA,oBAAoB","names":["Component","AssessmentsComponent","constructor","afs","appService","toastr","ngOnInit","course","currentUser","loadStudents","collection","get","subscribe","r","allStudents","student","docs","studentData","data","id","courses","exam","quiz","assignment","push","saveAssessment","batch","firestore","update","doc","ref","commit","success","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\ALX\\E-learning\\src\\app\\lecturer\\assessments\\assessments.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ToastrService } from 'ngx-toastr';\nimport { AppService } from 'src/app/services/app.service';\n\n@Component({\n  selector: 'app-assessments',\n  templateUrl: './assessments.component.html',\n  styleUrls: ['./assessments.component.scss'],\n})\nexport class AssessmentsComponent implements OnInit {\n  allStudents: any[] = [];\n  course: string = 'abs';\n  busy = false;\n  constructor(\n    private afs: AngularFirestore,\n    private appService: AppService,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this.course = this.appService.currentUser.course;\n    this.loadStudents();\n  }\n\n  loadStudents() {\n    this.afs\n      .collection('Students')\n      .get()\n      .subscribe((r) => {\n        this.allStudents = [];\n        for (const student of r.docs) {\n          const studentData: any = student.data();\n          studentData.id = student.id;\n\n          if (!studentData.courses) studentData.courses = {};\n          if (!studentData.courses[this.course])\n            studentData.courses[this.course] = {\n              exam: 0,\n              quiz: 0,\n              assignment: 0,\n            };\n          this.allStudents.push(studentData);\n        }\n      });\n  }\n\n  async saveAssessment() {\n    const batch = this.afs.firestore.batch();\n    for (const student of this.allStudents) {\n      const update: any = {};\n      update[`courses.${this.course}`] = {\n        exam: student.courses[this.course].exam,\n        quiz: student.courses[this.course].quiz,\n        assignment: student.courses[this.course].assignment,\n      };\n      batch.update(this.afs.doc(`Students/${student.id}`).ref, update);\n    }\n\n    await batch.commit();\n    this.toastr.success('Assessment saved');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}