{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/hp/Documents/ALX/E-learning/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AddExamComponent = class AddExamComponent {\n  constructor(afs, toastr) {\n    this.afs = afs;\n    this.toastr = toastr;\n    this.busy = false;\n    this.numQs = 0;\n  }\n  ngOnInit() {}\n  numQsChanged() {\n    this.exam = {\n      questions: []\n    };\n    for (let index = 0; index < this.numQs; index++) {\n      this.exam.questions.push({\n        question: '',\n        A: '',\n        B: '',\n        C: '',\n        D: ''\n      });\n    }\n  }\n  postExam() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.examName) {\n        _this.toastr.error('Please enter exam name.');\n        return;\n      }\n      yield _this.afs.collection('Exams').add({\n        examName: _this.examName,\n        exam: _this.exam,\n        createdOn: new Date().toDateString()\n      });\n      _this.toastr.success('Exam Posted');\n    })();\n  }\n  updateQuestion(i, prop, $event) {\n    console.log(i);\n    this.exam.questions[i][prop] = $event;\n  }\n};\nAddExamComponent = __decorate([Component({\n  selector: 'app-add-exam',\n  templateUrl: './add-exam.component.html',\n  styleUrls: ['./add-exam.component.scss']\n})], AddExamComponent);\nexport { AddExamComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAK3BC,YAAoBC,GAAqB,EAAUC,MAAqB;IAApD,QAAG,GAAHD,GAAG;IAA4B,WAAM,GAANC,MAAM;IAHzD,SAAI,GAAQ,KAAK;IAEjB,UAAK,GAAW,CAAC;EAC0D;EAE3EC,QAAQ,IAAU;EAElBC,YAAY;IACV,IAAI,CAACC,IAAI,GAAG;MAAEC,SAAS,EAAE;IAAE,CAAE;IAE7B,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,IAAI,CAACC,KAAK,EAAED,KAAK,EAAE,EAAE;MAC/C,IAAI,CAACF,IAAI,CAACC,SAAS,CAACG,IAAI,CAAC;QAAEC,QAAQ,EAAE,EAAE;QAAEC,CAAC,EAAE,EAAE;QAAEC,CAAC,EAAE,EAAE;QAAEC,CAAC,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAE,CAAE,CAAC;;EAE1E;EAEMC,QAAQ;IAAA;IAAA;MACZ,IAAI,CAAC,KAAI,CAACC,QAAQ,EAAE;QAClB,KAAI,CAACd,MAAM,CAACe,KAAK,CAAC,yBAAyB,CAAC;QAC5C;;MAEF,MAAM,KAAI,CAAChB,GAAG,CAACiB,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAAC;QACrCH,QAAQ,EAAE,KAAI,CAACA,QAAQ;QACvBX,IAAI,EAAE,KAAI,CAACA,IAAI;QACfe,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,YAAY;OACnC,CAAC;MAEF,KAAI,CAACpB,MAAM,CAACqB,OAAO,CAAC,aAAa,CAAC;IAAC;EACrC;EAEAC,cAAc,CAACC,CAAM,EAAEC,IAAS,EAAEC,MAAW;IAC3CC,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;IACd,IAAI,CAACpB,IAAI,CAACC,SAAS,CAACmB,CAAC,CAAC,CAACC,IAAI,CAAC,GAAGC,MAAM;EACvC;CACD;AAnCY5B,gBAAgB,eAL5BD,SAAS,CAAC;EACTgC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWjC,gBAAgB,CAmC5B;SAnCYA,gBAAgB","names":["Component","AddExamComponent","constructor","afs","toastr","ngOnInit","numQsChanged","exam","questions","index","numQs","push","question","A","B","C","D","postExam","examName","error","collection","add","createdOn","Date","toDateString","success","updateQuestion","i","prop","$event","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\ALX\\E-learning\\src\\app\\lecturer\\add-exam\\add-exam.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-exam',\n  templateUrl: './add-exam.component.html',\n  styleUrls: ['./add-exam.component.scss'],\n})\nexport class AddExamComponent implements OnInit {\n  examName: any;\n  busy: any = false;\n  exam: any;\n  numQs: number = 0;\n  constructor(private afs: AngularFirestore, private toastr: ToastrService) {}\n\n  ngOnInit(): void {}\n\n  numQsChanged() {\n    this.exam = { questions: [] };\n\n    for (let index = 0; index < this.numQs; index++) {\n      this.exam.questions.push({ question: '', A: '', B: '', C: '', D: '' });\n    }\n  }\n\n  async postExam() {\n    if (!this.examName) {\n      this.toastr.error('Please enter exam name.');\n      return;\n    }\n    await this.afs.collection('Exams').add({\n      examName: this.examName,\n      exam: this.exam,\n      createdOn: new Date().toDateString(),\n    });\n\n    this.toastr.success('Exam Posted');\n  }\n\n  updateQuestion(i: any, prop: any, $event: any) {\n    console.log(i);\n    this.exam.questions[i][prop] = $event;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}